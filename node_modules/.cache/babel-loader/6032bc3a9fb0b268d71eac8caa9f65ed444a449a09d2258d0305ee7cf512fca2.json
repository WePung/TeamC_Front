{"ast":null,"code":"var _jsxFileName = \"/Users/test/Desktop/boardtest/TeamC_Front/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = {\n  id: \"test@gmail.com\",\n  pw: \"A!123456789\"\n};\nconst Login = () => {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [idValid, setIdValid] = useState(false);\n  const [pwValid, setPwValid] = useState(false);\n  const [notAllow, setNotAllow] = useState(true);\n  const handleId = e => {\n    setId(e.target.value);\n    const regex = /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n    if (regex.test(id)) {\n      setIdValid(true);\n    } else {\n      setIdValid(false);\n    }\n  };\n  const handlePw = e => {\n    setPw(e.target.value);\n    const regex = /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+])(?!.*[^a-zA-z0-9$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,20}$/;\n    if (regex.test(pw)) {\n      setPwValid(true);\n    } else {\n      setPwValid(false);\n    }\n  };\n  useEffect(() => {\n    if (idValid && pwValid) {\n      setNotAllow(false);\n      return;\n    }\n    setNotAllow(true);\n  }, [idValid, pwValid]);\n  const onClickConfirmButton = () => {\n    if (id === User.id && pw === User.pw) {\n      alert('로그인 성공');\n    } else if (id !== User.id && pw === User.pw) {\n      alert('아이디를 확인해주세요');\n    } else if (id === User.id && pw !== User.pw) {\n      alert('패스워드를 확인해주세요');\n    } else {\n      alert('가입자 정보가 없습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"logo\\uBD80\\uBD84\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"id\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: id,\n          onChange: handleId,\n          placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errMessgeId\",\n          onChange: handleId,\n          children: !idValid && id.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uC62C\\uBC14\\uB978 \\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: pw,\n          onChange: handlePw,\n          placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errMessgePassword\",\n        children: !pwValid && pw.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC62C\\uBC14\\uB978 \\uD328\\uC2A4\\uC6CC\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnWrap\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginBtn\",\n        disabled: notAllow,\n        onClick: onClickConfirmButton,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"cxRhN4l/y03KVX0+MtkalPTpHjc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","User","id","pw","Login","setId","setPw","idValid","setIdValid","pwValid","setPwValid","notAllow","setNotAllow","handleId","e","target","value","regex","test","handlePw","onClickConfirmButton","alert","length"],"sources":["/Users/test/Desktop/boardtest/TeamC_Front/src/Login.js"],"sourcesContent":["import React\n, { useEffect,\nuseState } from \"react\";\n\nconst User = \n    {id: \"test@gmail.com\",\n    pw: \"A!123456789\"\n    }\n\n const Login = () =>{\n\n    const [id, setId] = useState(\"\");\n    const [pw, setPw] = useState(\"\");\n\n    const [idValid, setIdValid]= useState(false);\n    const [pwValid, setPwValid]= useState(false);\n    const [notAllow, setNotAllow] = useState(true);\n\n\n\n    const handleId = (e) => {\n        setId(e.target.value);\n        const regex =\n        /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n        if(regex.test(id)){\n            setIdValid(true);\n        }else{\n            setIdValid(false);\n        }\n    }\n\n    const handlePw = (e) => {\n        setPw(e.target.value);\n        const regex =\n        /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+])(?!.*[^a-zA-z0-9$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,20}$/;\n        if(regex.test(pw)){\n            setPwValid(true);\n        }else{\n            setPwValid(false);\n        }\n    }\n\n    useEffect( ()=> {\n        if(idValid && pwValid){\n            setNotAllow(false)\n            return;\n        }\n        setNotAllow(true);\n    }, [idValid, pwValid]);\n\n    const onClickConfirmButton = () =>{\n        if(id === User.id && pw === User.pw){\n            alert('로그인 성공');\n        }else if(id !== User.id && pw === User.pw){\n            alert('아이디를 확인해주세요');\n        }else if(id === User.id && pw !== User.pw){\n            alert('패스워드를 확인해주세요');\n        }else{\n            alert('가입자 정보가 없습니다.');\n        }\n    }\n\n    return(\n        <div className=\"Page\">\n            <div className=\"title\">\n                logo부분\n            </div>\n\n            <div className=\"contentWrap\">\n                <div className=\"id\">\n                    <input type = \"text\"\n                    value={id}\n                    onChange={handleId}\n                    placeholder=\"아이디를 입력해주세요\"></input>\n                    <div className=\"errMessgeId\"\n                    onChange={handleId}>\n                        {\n                            !idValid && id.length > 0 &&(\n                                <div>올바른 아이디를 입력해주세요</div>\n                            )\n                        }\n                </div>\n                </div>\n                <div className=\"password\">\n                    <input type = \"password\"\n                    value={pw}\n                    onChange={handlePw}\n                    placeholder=\"패스워드를 입력해주세요\"\n                    ></input>\n                </div>\n                <div className=\"errMessgePassword\"\n                >\n                    {\n                            !pwValid && pw.length > 0 &&(\n                                <div>올바른 패스워드를 입력해주세요</div>\n                            )\n                        }\n                </div>\n            </div>\n            <div className=\"btnWrap\">\n                <button className=\"loginBtn\"\n                disabled = {notAllow}\n                onClick = {onClickConfirmButton}>\n                    로그인\n                </button>\n            </div>\n        </div>\n    )\n }\n\n export default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}